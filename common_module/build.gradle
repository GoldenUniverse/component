apply plugin: 'com.android.library'

def implementationDependencies = rootProject.ext.dependencies
def processors = rootProject.ext.annotationProcessor
def apiProject = rootProject.ext.apiFileDependencies
def implementationExcludes = rootProject.ext.implementationExcludes
def debugDependencies = rootProject.ext.debugImplementationDependencies


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }
}


dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'


    //系统组件依赖库
    rootProject.ext.systemDependencies.each { k, v -> api v }
    // 处理所有的 xxximplementation 依赖
    implementationDependencies.each { k, v -> api v }
    // 处理 annotationProcessor 依赖
    processors.each { k, v -> annotationProcessor v }

    debugDependencies.each { k, v -> api v }

    apiProject.each { k, v -> api project(v) }
    // 处理所有包含 exclude 的依赖
    implementationExcludes.each { entry ->
        implementation(entry.key) {
            entry.value.each { childEntry ->
                exclude(group: childEntry)
            }
        }
    }

    //需要httpClient
    api project(':CusLib:webviewlib')


}
